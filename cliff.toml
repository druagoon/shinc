# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# template for the changelog footer
header = """
# Changelog\n
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% if version -%}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## Unreleased
{% endif -%}
{% if version == "v1.0.0" %}
    Initial release\n
{% else -%}
    {% set has_breaking = false -%}
    {% for commit in commits -%}
        {% if commit.breaking -%}
            {% set_global has_breaking = true -%}
        {% endif -%}
    {% endfor -%}
    {% if has_breaking %}
        ### <a id="breaking-{{ version }}"></a>Breaking Changes
        {% for commit in commits -%}
            {% if commit.breaking %}
                - **{{ commit.message | upper_first }}** ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/druagoon/shinc/commit/{{ commit.id }}))<br />{{ commit.breaking_description }}
            {% endif -%}
        {% endfor -%}
    {% endif -%}
    {% for group, commits in commits | group_by(attribute="group") %}
        ### {{ group | upper_first }}
        {% for commit in commits %}
            - {% if commit.breaking %}[**breaking**](#breaking-{{ version }}) {% endif -%}\
            {% if commit.scope %}*({{ commit.scope }})* {% endif -%}\
            {{ commit.message | upper_first }} (\
                [{{ commit.id | truncate(length=7, end="") }}](https://github.com/druagoon/shinc/commit/{{ commit.id }})\
                    {% for link in commit.links -%}
                        , {{ link.text }}({{ link.href }})\
                    {% endfor -%}
                )\
        {% endfor %}
    {% endfor %}
{% endif -%}
"""
# template for the changelog footer
footer = """
{% for release in releases -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            [{{ release.version | trim_start_matches(pat="v") }}]: \
                https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\
                    /compare/{{ release.previous.version }}..{{ release.version }}
        {% else -%}
            [{{ release.version | trim_start_matches(pat="v") }}]: \
                https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\
                    /releases/tag/{{ release.version }}
        {% endif -%}
    {% else -%}
        [unreleased]: https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\
            /compare/{{ release.previous.version }}..HEAD
    {% endif -%}
{% endfor %}
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace from the templates
trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/druagoon/shinc/issues/${2}))" }, # replace issue numbers
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^style", skip = true },
    { message = "^refactor", skip = true },
    { message = "^test", skip = true },
    { message = "^chore", skip = true },
    { message = "^docs", skip = true },
    { message = "^perf", group = "Performance" },
    { body = ".*security", group = "Security" },
    { body = ".*[dD]eprecate.*", group = "Deprecated" },
    { message = "^fix", group = "Fixed" },
    { message = "^.*: fix ", group = "Fixed" },
    { message = "^.*: (add|support) ", group = "Added" },
    { message = "^.*: (remove|delete) ", group = "Removed" },
    { message = "^.*: (update|change|rename) ", group = "Changed" },
    { message = "^feat", group = "Added" },
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = true
# regex for matching git tags
tag_pattern = "v[0-9].*"
# regex for skipping tags
# skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"

link_parsers = [
    { pattern = "[fF]ixes #(\\d+)", text = "fixes [#${1}]", href = "https://github.com/druagoon/shinc/issues/$1" },
    { pattern = "[cC]loses #(\\d+)", text = "closes [#${1}]", href = "https://github.com/druagoon/shinc/issues/$1" },
    { pattern = "[sS]ee #(\\d+)", text = "see [#${1}]", href = "https://github.com/druagoon/shinc/issues/$1" },
]
